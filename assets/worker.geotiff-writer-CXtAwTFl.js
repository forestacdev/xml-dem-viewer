(function(){"use strict";const m=(i,r)=>{const a=i.length,t=i[0].length,w=t*a*4,b=new Float64Array([Math.abs(r.pixelSizeX),Math.abs(r.pixelSizeY),0]),M=new Float64Array([0,0,0,r.upperLeftX,r.upperLeftY,0]),f=new Uint16Array([1,1,0,3,1024,0,1,2,1025,0,1,1,2048,0,1,4326]),T=8,F=18,A=2+F*12+4,g=T+A,y="-9999",p=g+f.length*2,u=p+y.length+1,d=u+3*8,h=d+6*8,U=h+w;console.log(`Creating GeoTIFF: ${t}x${a}, ${U} bytes`);const c=new ArrayBuffer(U),n=new DataView(c);let o=0;n.setUint16(o,18761,!0),o+=2,n.setUint16(o,42,!0),o+=2,n.setUint32(o,8,!0),o+=4,n.setUint16(o,F,!0),o+=2;const e=(s,l,E,I)=>{n.setUint16(o,s,!0),n.setUint16(o+2,l,!0),n.setUint32(o+4,E,!0),n.setUint32(o+8,I,!0),o+=12};e(256,4,1,t),e(257,4,1,a),e(258,3,1,32),e(259,3,1,1),e(262,3,1,1),e(273,4,1,h),e(277,3,1,1),e(278,4,1,a),e(279,4,1,w),e(282,5,1,0),e(283,5,1,0),e(284,3,1,1),e(296,3,1,2),e(339,3,1,3),e(33550,12,3,u),e(33922,12,6,d),e(34735,3,f.length,g),e(42113,2,y.length+1,p),n.setUint32(o,0,!0),new Uint16Array(c,g,f.length).set(f);const x=new TextEncoder().encode(y+"\0");new Uint8Array(c,p,x.length).set(x);for(let s=0;s<3;s++)n.setFloat64(u+s*8,b[s],!0);for(let s=0;s<6;s++)n.setFloat64(d+s*8,M[s],!0);let S=h;for(let s=0;s<a;s++)for(let l=0;l<t;l++)n.setFloat32(S,i[s][l],!0),S+=4;return c};self.onmessage=i=>{const{demArray:r,geoTransform:a}=i.data;try{if(self.postMessage({type:"progress",message:"GeoTIFF処理開始...",progress:0}),!r||!r.length||!r[0]||!r[0].length)throw new Error("Invalid demArray data");if(!a||a.length!==6)throw new Error("Invalid geoTransform data (must be array of 6 elements)");self.postMessage({type:"info",message:`処理データ: ${r[0].length} × ${r.length} pixels`});const t=m(r,a);self.postMessage({type:"complete",buffer:t,message:"GeoTIFF作成完了"})}catch(t){t instanceof Error&&self.postMessage({type:"error",error:t.message,stack:t.stack})}},self.onmessage=i=>{const{demArray:r,geoTransform:a}=i.data;try{self.postMessage({type:"progress",message:"処理開始...",progress:0});let t=m(r,a);self.postMessage({type:"complete",buffer:t,message:"TIFF作成完了"})}catch(t){t instanceof Error&&self.postMessage({type:"error",error:t.message,stack:t.stack})}}})();
